{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","totalPages","onPageChange","className","cn","disabled","href","onClick","map","item","active","length","App","allItems","useState","itemsOnPage","setitemsOnPage","activePage","setActivePage","startValue","setStartValue","endValue","setEndvalue","items","amountOfPages","Math","ceil","currentContent","slice","currentFromValue","currentToValue","id","onChange","event","target","value","htmlFor","selectedPage","changeCurrentPage","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCCIG,EAAa,SAAC,GAEb,IADZC,EACW,EADXA,YAAaC,EACF,EADEA,WAAYC,EACd,EADcA,aAEzB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,EAAoB,QAAU,OAC7CO,QAAS,kBACS,IAAhBP,GAAqBE,EAAaF,EAAc,IANpD,oBAYDC,EAAWO,KAAI,SAACC,GAAD,OACd,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQV,IAAgBS,IADvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAML,EAAaO,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUL,IAAgBC,EAAWU,SAFzC,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeN,IAAgBC,EAAWU,OAAS,QAAU,OAC7DJ,QAAS,kBACPP,IAAgBC,EAAWU,QACtBT,EAAaF,EAAc,IAPpC,wBCxCKY,EAAgB,WAC3B,IAyB6BC,EAzB7B,EAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBAASC,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ9B,EAAW,EAAG,IA0BtB+B,GANuBX,EAMaE,EAHjCtB,EAAW,EAFHgC,KAAKC,KAtBF,GAsBqBb,KAkBzC,IAAMc,EAVGJ,EAAMK,MAAMT,EAAa,EAAGE,GAY/BQ,EAAmBF,EAAe,GAClCG,EAAiBH,EAAeA,EAAehB,OAAS,GAE9D,OACE,sBAAKR,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWc,EADX,mBACgCY,EADhC,cACsDC,EADtD,aAIA,sBAAK3B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,SA1BV,SAAqBC,GACnBjB,GAAgBiB,EAAMC,OAAOC,OAC7BjB,EAAc,GACdI,GAAaW,EAAMC,OAAOC,OAC1Bf,EAAc,IAuBNe,MAAOpB,EALT,UAOE,wBAAQoB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEH,YAAaiB,EACbhB,WAAYuB,EACZtB,aAAc,SAACmC,GAAD,OA1EM,SAACA,GACzBnB,EAAcmB,GACdjB,EAAciB,EAAetB,EAAcA,EAAc,GACzDO,EAAYe,EAAetB,GAuESuB,CAAkBD,MAEpD,6BACGV,EAAenB,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC5FjB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1f0e2aa2.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\n\ninterface Props{\n  currentPage: number,\n  totalPages: number[],\n  onPageChange: (item: number) => void,\n}\n\nexport const Pagination = ({\n  currentPage, totalPages, onPageChange,\n}: Props) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage !== 1 ? 'false' : 'true'}\n          onClick={() => (\n            currentPage !== 1 && onPageChange(currentPage - 1)\n          )}\n        >\n          «\n        </a>\n      </li>\n      {totalPages.map((item: number) => (\n        <li\n          className={cn('page-item', { active: currentPage === item })}\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === totalPages.length,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage !== totalPages.length ? 'false' : 'true'}\n          onClick={() => (\n            currentPage !== totalPages.length\n              && onPageChange(currentPage + 1)\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setitemsOnPage] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n  const [startValue, setStartValue] = useState(1);\n  const [endValue, setEndvalue] = useState(itemsOnPage);\n  const totalAmount = 42;\n  const items = getNumbers(1, 42);\n\n  const changeCurrentPage = (selectedPage: number) => {\n    setActivePage(selectedPage);\n    setStartValue(selectedPage * itemsOnPage - itemsOnPage + 1);\n    setEndvalue(selectedPage * itemsOnPage);\n  };\n\n  // const changePageByArrow = (direction: string, selectedPage: number) => {\n  //   if (direction === 'back') {\n  //     setActivePage(selectedPage - 1);\n  //     setStartValue((selectedPage - 1) * itemsOnPage - itemsOnPage + 1);\n  //     setEndvalue((selectedPage - 1) * itemsOnPage);\n  //   } else {\n  //     setActivePage(selectedPage + 1);\n  //     setStartValue((selectedPage + 1) * itemsOnPage - itemsOnPage + 1);\n  //     setEndvalue((selectedPage + 1) * itemsOnPage);\n  //   }\n  // };\n\n  const calculateTotalPages = (allItems: number) => {\n    const amount = Math.ceil(totalAmount / allItems);\n\n    return getNumbers(1, amount);\n  };\n\n  const amountOfPages = calculateTotalPages(itemsOnPage);\n\n  function createContent() {\n    return items.slice(startValue - 1, endValue);\n  }\n\n  function changePages(event: React.ChangeEvent<HTMLSelectElement>) {\n    setitemsOnPage(+event.target.value);\n    setActivePage(1);\n    setEndvalue(+event.target.value);\n    setStartValue(1);\n  }\n\n  const currentContent = createContent();\n\n  const currentFromValue = currentContent[0];\n  const currentToValue = currentContent[currentContent.length - 1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${currentFromValue} - ${currentToValue} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={changePages}\n            value={itemsOnPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={activePage}\n        totalPages={amountOfPages}\n        onPageChange={(selectedPage) => changeCurrentPage(selectedPage)}\n      />\n      <ul>\n        {currentContent.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}